#!/usr/bin/env ruby

require 'bundler/setup'
require 'dotenv'
require 'pry-byebug'
require 'thor'
require 'thor_ext'
require 'zeitwerk'

class Cli < Thor
  extend ThorExt::Start

  desc 'example UNNAMED_REQUIRED_ARG [UNNAMED_OPTIONAL_ARG] [-s | -n | -b]', 'Does a thing and stuff'
  option :named_string,  aliases: '-s', type: :string,  required: false, desc: 'Example named string' , default: nil
  option :named_numeric, aliases: '-n', type: :numeric, required: false, desc: 'Example named number' , default: 123
  option :named_boolean, aliases: '-b', type: :boolean, required: false, desc: 'Example named boolean', default: false
  def example(unnamed_required_arg, unnamed_optional_arg = nil)
    Example.call(options.merge(
      unnamed_required_arg: unnamed_required_arg,
      unnamed_optional_arg: unnamed_optional_arg,
    ))
  end

  desc 'browse', 'Opens the trunk directory in the file browser'
  def browse
    binding.pry
  end

  class << self
    def start
      setup
      super
    end

    def setup
      Dotenv.load
      current_dir = File.expand_path(__dir__)
      loader.push_dir(File.join(current_dir, '../src'))
      loader.enable_reloading
      loader.setup
    end

    def loader
      @loader ||= Zeitwerk::Loader.new
    end
  end
end

Cli.start if __FILE__ == $PROGRAM_NAME

def reload!
  Cli.reload
end
